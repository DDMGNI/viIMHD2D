
[grid]

nt   = integer(default=100)            # number of timesteps
nx   = integer(default=101)            # number of spatial grid points in x
ny   = integer(default=101)            # number of spatial grid points in y

ht   = float(default=0.01)             # length of timestep

Lx    = float(default=1.0)             # spatial domain in x
x1    = float(default=0.0)             # 
x2    = float(default=0.0)             # 

Ly    = float(default=1.0)             # spatial domain in y
y1    = float(default=0.0)             # 
y2    = float(default=0.0)             # 


[solver]

# module containing the Solver class
# NOT YET IMPLEMENTED!
solver_module  = string(default='imhd.integrators.')

# default iteration scheme for nonlinear implicit solver
petsc_snes_type     = option('newton_basic', 'newton_quadratic', default='newton_basic')

# PETSC nonlinear solver absolute convergence tolerance
petsc_snes_rtol     = float(default=1E-20)
		
# PETSC nonlinear solver relative convergence tolerance
petsc_snes_atol     = float(default=1E-12)
		
# PETSC nonlinear solver convergence tolerance in terms
# of the norm of the change in the solution between steps
petsc_snes_stol     = float(default=1E-14)
		
# PETSC nonlinear solver maximum number of iterations
petsc_snes_max_iter = integer(default=20)		

# PETSC SNES monitor
petsc_snes_monitor  = boolean(default=False)

# PETSc linear solver type
petsc_ksp_type      = option('gmres', 'preonly', default='gmres')

# PETSc linear solver relative convergence tolerance
# (relative decrease in the residual norm)
petsc_ksp_rtol      = float(default=1E-7)		

# PETSc linear solver absolute convergence tolerance
# (absolute size of the residual norm)
petsc_ksp_atol      = float(default=1E-10)
		
# PETSc linear solver maximum number of iterations
petsc_ksp_max_iter  = integer(default=1000)		

# PETSC KSP monitor
petsc_ksp_monitor   = boolean(default=False)

# PETSc preconditioner type
petsc_pc_type       = option('none', 'lu', 'asm', default='none')

# PETSC LU solver package to be used in LU decomposition or ASM preconditioner
petsc_lu_package    = option('mumps', 'pastix', 'superlu_dist', default='mumps')


[initial_data]

mu              = float(default=0.0)           # friction 
nu              = float(default=0.0)           # viscosity
eta             = float(default=0.0)           # resistivity
de              = float(default=0.0)           # electron skin depth

mass            = float(default=1.0)           # particle mass

magnetic        = float(default=1.0)           # constant magnetic field
velocity        = float(default=1.0)           # constant velocity field
 
magnetic_python = string(default=None)  	   # calculate magnetic field
velocity_python = string(default=None)         # calculate velocity field
pressure_python = string(default=None)         # calculate pressure


[io]

hdf5_input  = string(default=None)         # restart run from hdf5 file, not implemented yet
hdf5_output = string(default=None)         # write data to hdf5 file
nsave       = integer(default=1)           # save every nsave'th timestep


[mode]

interactive = boolean(default=False)       # run in interactive or batch mode


[plot]

nplot       = integer(default=1)           # plot every nplot'th timestep
ntime       = integer(default=0)           # plot ntime timesteps in timetraces

